# Template file for 'wine'
pkgname=wine
version=2.9
revision=1
build_style=gnu-configure
configure_args="--without-gstreamer"
short_desc="Run Microsoft Windows applications"
maintainer="Andrea Brancaleoni <abc@pompel.me>"
license="LGPL-2.1"
homepage="http://www.winehq.org/"
distfiles="https://dl.winehq.org/wine/source/${version%.*}.x/wine-${version}.tar.xz"
checksum=ac46f7bbbbc1dc135c95e4f98d28bf6e3d7a78fb7f9ba6caa7354a3e8786545f

CC="gcc"
CFLAGS="-O2 -pipe"

lib32mode=full
only_for_archs="i686 x86_64"

hostmakedepends="pkg-config flex prelink"
makedepends="gettext-devel lcms2-devel zlib-devel ncurses-devel
 glu-devel libSM-devel libXext-devel libX11-devel libXpm-devel
 libXinerama-devel libXcomposite-devel libXmu-devel libXxf86vm-devel
 libXcursor-devel libXrandr-devel libXdamage-devel libXi-devel
  alsa-lib-devel libgphoto2-devel libxml2-devel
 libxslt-devel glib-devel freetype-devel pulseaudio-devel
 mpg123-devel libgsm-devel libopenal-devel giflib-devel libpng-devel
 v4l-utils-devel fontconfig-devel gnutls-devel dbus-devel sane-devel
 libldap-devel libpcap-devel cups-devel dbus-devel ocl-icd-devel"
depends="libXi libXinerama libXcomposite libXcursor libOSMesa
 desktop-file-utils hicolor-icon-theme liberation-fonts-ttf
 gnutls"

binfmts="/usr/bin/wine --magic MZ"

build_options="staging"
desc_option_staging="Enable wine-staging patchset"
build_options_default="staging"

nopie=yes

if [ ${build_option_staging} ]; then
	hostmakedepends+=" automake"
fi

if [ ${build_option_staging} ]; then
	makedepends+=" libva-devel gtk+3-devel"
	distfiles+=" https://github.com/wine-compholio/wine-staging/archive/v${version}.tar.gz"
	checksum+=" cde0895142c0ca0be5b532560ec0546d6e4f655615572d80cfcce663f92c57f6"
fi

if [ ${XBPS_TARGET_MACHINE} == "x86_64" ]; then
	configure_script=../configure
	makedepends+=" gettext-devel-32bit lcms2-devel-32bit zlib-devel-32bit ncurses-devel-32bit
	 glu-devel-32bit libSM-devel-32bit libXext-devel-32bit libX11-devel-32bit libXpm-devel-32bit
	 libXinerama-devel-32bit libXcomposite-devel-32bit libXmu-devel-32bit libXxf86vm-devel-32bit
	 libXcursor-devel-32bit libXrandr-devel-32bit libXdamage-devel-32bit libXi-devel-32bit
	 libldap-devel alsa-lib-devel-32bit libgphoto2-devel-32bit libxml2-devel-32bit
	 libxslt-devel-32bit freetype-devel-32bit pulseaudio-devel-32bit
	 mpg123-devel-32bit libgsm-devel-32bit libopenal-devel-32bit giflib-devel-32bit libpng-devel-32bit
	 fontconfig-devel-32bit gnutls-devel-32bit dbus-devel-32bit sane-devel-32bit libldap-devel
	 libpcap-devel-32bit cups-devel-32bit dbus-devel-32bit ocl-icd-devel-32bit libgcc-devel-32bit cross-i686-pc-linux-gnu-libc cross-i686-pc-linux-gnu  glibc-devel-32bit libstdc++-devel-32bit gcc-multilib libconfig-devel-32bit gtk+3-devel-32bit"
	depends+=" libXi-32bit libXinerama-32bit libXcomposite-32bit libXcursor-32bit libOSMesa-32bit gnutls-32bit"
fi

post_extract() {
	if [ ${build_option_staging} ]; then
		cd ${XBPS_BUILDDIR}/${pkgname}-staging-${version}/patches/
		DESTDIR="$wrksrc" ./patchinstall.sh --all
	fi
}

pre_configure() {
	if [ ${XBPS_TARGET_MACHINE} == "x86_64" ]; then
		mkdir wine64
		sed -i s/lib64/lib/g configure
	fi
}

do_configure() {
	if [ ${XBPS_TARGET_MACHINE} == "x86_64" ]; then
		cd wine64
		${configure_script} ${configure_args} --enable-win64
	else
		${configure_script} ${configure_args}
	fi
}


do_build() {
	: ${make_cmd:=make}
	if [ ${XBPS_TARGET_MACHINE} == "x86_64" ]; then
		cd wine64
		${make_cmd} ${makejobs} ${make_build_args} ${make_build_target}
		mkdir ../wine32
		cd ../wine32
		${configure_script} ${configure_args} --with-wine64=../wine64
	fi
	${make_cmd} ${makejobs} ${make_build_args} ${make_build_target}
}

do_install () {
	: ${make_cmd:=make}
	: ${make_install_target:=install}
	if [ ${XBPS_TARGET_MACHINE} == "x86_64" ]; then
		cd wine32
		${make_cmd} DESTDIR=${DESTDIR} ${make_install_args} ${make_install_target}
		cd ../wine64
	fi
	${make_cmd} DESTDIR=${DESTDIR} ${make_install_args} ${make_install_target}
}

post_install() {
	# Font aliasing settings for Win32 applications
	install -d ${DESTDIR}/etc/fonts/conf.{avail,d}
	install -m644 ${FILESDIR}/30-win32-aliases.conf ${DESTDIR}/etc/fonts/conf.avail
	ln -s ../conf.avail/30-win32-aliases.conf ${DESTDIR}/etc/fonts/conf.d/30-win32-aliases.conf
}

libwine_package() {
	lib32mode=full
	short_desc+=" - Runtime library"
	replaces="libwine-unstable>=0"
	pkg_install() {
		vmove "usr/lib/*.so.*"
		vmove usr/lib/wine
	}
}
wine-devel_package() {
	depends="libwine-${version}_${revision}"
	short_desc+=" - development files"
	replaces="wine-unstable-devel>=0"
	pkg_install() {
		vmove usr/include
		vmove "usr/lib/*.so"
	}
}
